<?php

class AceCommonTest extends DrupalWebTestCase {
  
  function getInfo() {
    return array(
      'name' => t('ACE Common'),
      'description' => t('Test suite for ACE Common features.'),
      'group' => t('ACE'),
    );
  }
  
  function setUp() {
    parent::setUp('ace_common');
  }
  
  function test_validate_integer() {
    $this->assertTrue(_validate_integer(0));
    $this->assertTrue(_validate_integer('0'));
    $this->assertTrue(_validate_integer(1));
    $this->assertTrue(_validate_integer('1'));
    $this->assertTrue(_validate_integer(2747));
    $this->assertTrue(_validate_integer('2747'));
    $this->assertTrue(_validate_integer(-1));
    $this->assertTrue(_validate_integer('-1'));
    $this->assertTrue(_validate_integer(-84848));
    $this->assertTrue(_validate_integer('-84848'));
    
    $this->assertFalse(_validate_integer('hi'));
    $this->assertFalse(_validate_integer(''));
    $this->assertFalse(_validate_integer('true'));
    $this->assertFalse(_validate_integer(true));
    $this->assertFalse(_validate_integer(false));
    $this->assertFalse(_validate_integer(1.283));
    $this->assertFalse(_validate_integer('1.283'));
    $this->assertFalse(_validate_integer('1hi'));
    $this->assertFalse(_validate_integer('hi1'));
    $this->assertFalse(_validate_integer('1 3'));
  }
  
  function test_validate_integer_nonnegative() {
    $this->assertTrue(_validate_integer_nonnegative(0));
    $this->assertTrue(_validate_integer_nonnegative('0'));
    $this->assertTrue(_validate_integer_nonnegative(1));
    $this->assertTrue(_validate_integer_nonnegative('1'));
    $this->assertTrue(_validate_integer_nonnegative(84848));
    $this->assertTrue(_validate_integer_nonnegative('84848'));
    
    $this->assertFalse(_validate_integer_nonnegative(-1));
    $this->assertFalse(_validate_integer_nonnegative(-84848));
    $this->assertFalse(_validate_integer_nonnegative('-84848'));
  }
  
  function test_validate_decimal() {
    $this->assertTrue(_validate_decimal(3.1));
    $this->assertTrue(_validate_decimal('3.1'));
    $this->assertTrue(_validate_decimal(2839.12883));
    $this->assertTrue(_validate_decimal(9));
    $this->assertTrue(_validate_decimal(.3));
    $this->assertTrue(_validate_decimal(-32.17));
    $this->assertTrue(_validate_decimal('-32.17'));

    $this->assertFalse(_validate_decimal('hello'));
    $this->assertFalse(_validate_decimal('.'));
    $this->assertFalse(_validate_decimal('seven'));
    $this->assertFalse(_validate_decimal('31.283a'));
  }
}
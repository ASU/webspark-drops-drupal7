<?php
/**
 * @file
 * Module definition for ASU Foundation payments integration.
 */
include_once ('gateway/AsuFoundationGateway.php');

function asu_foundation_menu() 
{
	$items = array();

	$items['admin/ace/cybersource'] = array(
		'title' => 'CyberSource Settings',
		'description' => 'Change CyberSource settings.',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'cybersource_admin_settings'
		),
		'access arguments' => array(
			'administer site configuration'
		),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'asu_foundation.admin.inc'
	);

	$items['cybersource/notification'] = array(
		'page callback' => 'process_cybersource_notification',
		'delivery callback' => 'deliver_plain',
		'type' => MENU_CALLBACK,
		'access callback' => TRUE
	);

	return $items;
}

function process_cybersource_notification() 
{
	if($_SERVER['REQUEST_METHOD'] != 'POST') 
  {
		header('HTTP/1.1 405 Not Post');
		return 'Request authentication failed.';
	}
	
	try 
  {
		if(validate_cybersource_notification_args($_POST)) 
    {
			watchdog('CyberSource', 'Received a payment notification. Params: %params |', array(
				'%params' => print_r($_POST, true)
			), WATCHDOG_INFO);
			
      //DEPENDENCY: ACE_PAYMENTS
			$gateway = ace_payments_gateways('asuf');

			$signature_result = verify_cybersource_signature($gateway, $_POST);
			
			if ($signature_result['verified']) 
      {
				$status_codes = get_cybersource_status_codes();
				
				$order_id = $_POST['req_merchant_defined_data12'];
				$decision = $_POST['decision'];
				$reason_code = $_POST['reason_code'];
				$transaction_id = $_POST['transaction_id'];
				
				$process_payment_args = array(
					'order_id' => $order_id,
					'status' => $status_codes[$decision],
					'transaction_id' => $transaction_id
				);
				
				// Update the ace_order record.
				$process_payment_result = $gateway->processPaymentResponse($process_payment_args);
				
				watchdog('CyberSource', 'Processed payment notification. Order: %order_id | Processing Result: %result | Status Code: %status | Transaction Id: %transaction_id |', array(
					'%order_id' => $process_payment_args['order_id'],
					'%result' => $process_payment_result['response_code'],
					'%status' => $process_payment_args['status'],
					'%transaction_id' => $process_payment_args['transaction_id']
				), WATCHDOG_DEBUG);
				
				if($process_payment_result['response_code'] == 'success') 
        {
					// The ace_order record was updated.
					if($process_payment_result['payment_success']) 
          {
						// The payment was accepted by CyberSource.
						checkout_finish($process_payment_result['order_id']);
						watchdog('CyberSource', 'Successful CyberSource payment notification.', array(), WATCHDOG_DEBUG);
					} 
          else 
          {
						// The payment was not accepted by CyberSource.
						watchdog('CyberSource', 'CyberSource payment notification of failed transaction. Order: %order_id | CyberSource Transaction Id: %transaction_id | CyberSource Decision: %decision | CyberSource Reason Code: %reason_code |', array(
							'%order_id' => $order_id,
							'%transaction_id' => $transaction_id,
							'%decision' => $decision,
							'%reason_code' => $reason_code
						), WATCHDOG_INFO);
					}
				} 
        else 
        {
					// Updating the ace_order record failed. The error was logged in AsuFoundationGateway->processPaymentResponse().
				}
				
				print 'Notification processed.';
				return;
			} 
      else 
      {
				watchdog('CyberSource', 'Payment notification failed signature verification check. Expected: %expected | Received: %received |', array(
					'%expected' => $signature_result['generated_signature'],
					'%received' => $signature_result['received_signature']
				), WATCHDOG_ERROR);
			}
		} 
    else 
    {
			watchdog('CyberSource', 'Received a malformed payment notification. Params: %params', array(
				'%params' => print_r($_POST, true)
			), WATCHDOG_ERROR);
		}
	} 
  catch (Exception $e) 
  {
		watchdog('CyberSource', 'Failed to process a payment notification. Exception: %e', array(
			'%e' => $e
		), WATCHDOG_ERROR);
	}
	
	print 'Internal error.';
}

function get_cybersource_status_codes() 
{
	return array(
		'ACCEPT' => 1,
		'DECLINE' => 2,
		'ERROR' => 4,
		'REVIEW' => 9
	);
}

function validate_cybersource_notification_args($args) 
{
	if(!array_key_exists('decision', $args)) 
  {
		return false;
	}
	if(!array_key_exists('transaction_id', $args)) 
  {
		return false;
	}
	if(!array_key_exists('reason_code', $args)) 
  {
		return false;
	}
	if(!array_key_exists('signature', $args)) 
  {
		return false;
	}
	if(!array_key_exists('signed_field_names', $args)) 
  {
		return false;
	}
	if(!array_key_exists('req_merchant_defined_data12', $args)) 
  {
		return false;
	}
	
	$signedFieldNames = explode(",", $args["signed_field_names"]);
	foreach($signedFieldNames as $key) 
  {
		if(!array_key_exists($key, $args))
    {
			return false;
    }
	}
	
	return true;
}

function verify_cybersource_signature($gateway, $params) 
{
	// Create a signature using the fields listed in the signed_field_names reply field.
	$generated_signature = $gateway->sign($params);
	$received_signature = $params['signature'];
	
	return array(
		'verified' => strcmp($generated_signature, $received_signature) === 0,
		'generated_signature' => $generated_signature,
		'received_signature' => $received_signature
	);
}

/**
 * Implementation of hook_ace_payments_gateways()
 */
function asu_foundation_ace_payments_gateways() 
{
	return new AsuFoundationGateway();
}

<?php
/**
 * @file
 * Miscellaneous extra code that doesn't need an entire module for it.
 */

/*
 * Implements hook_form_alter(&$form, &$form_state, $form_id)
 */
function ace_extras_form_alter(&$form, &$form_state, $form_id) {
  // Grab the currently logged in user
  global $user;
  $admin_role_id = (!empty(variable_get('user_admin_role'))) ? variable_get('user_admin_role') : 3;

  // Do not require personal profile address fields
  switch ($form_id) {
    case 'user_register_form':
    case 'user_profile_form':
    case 'membership_entity_modal_user_register_form':
      $form['field_profile_address_info']['und'][0]['street_block']['thoroughfare']['#required'] = FALSE;
      $form['field_profile_address_info']['und'][0]['locality_block']['postal_code']['#required'] = FALSE;
      $form['field_profile_address_info']['und'][0]['locality_block']['locality']['#required'] = FALSE;
      $form['field_profile_address_info']['und'][0]['locality_block']['administrative_area']['#required'] = FALSE;
      break;
  }

  // Target the required form
  //dpm($form_id);
  if ($form_id == 'membership_entity_edit_form') {
    $form['membership']['member_id']['#access'] = FALSE; // Auto-hide member ID field from all users
    if (isset($user->roles[$admin_role_id])) {
      $form['membership']['member_id']['#access'] = TRUE; // If user is admin, show member ID field
    }
  }
  if ($form_id == 'user_profile_form') {
    $form['field_profile_eab']['#access'] = FALSE; // Auto-hide EAB member field from all users
    $form['field_profile_old_nid']['#access'] = FALSE; // Auto-hide old Profile NID from D6 import from all users
    if (isset($user->roles[$admin_role_id])) {
      $form['field_profile_eab']['#access'] = TRUE; // If user is admin, show EAB member field
      $form['field_profile_old_nid']['#access'] = TRUE; // If user is admin, show old Profile NID from D6 import
    }
  }
  if ($form_id == 'taxonomy_form_term') {
    $form['description']['#access'] = FALSE; // Auto-hide term description field from all users
    $form['relations']['#access'] = FALSE; // Auto-hide term relations field from all users
    if (isset($user->roles[$admin_role_id])) {
      $form['description']['#access'] = TRUE; // If user is admin, show term description field
      $form['relations']['#access'] = TRUE; // If user is admin, show term relations field
    }
  }
}

/**
 * Implements hook_menu_alter().
 */
function ace_extras_menu_alter(&$items) {
  $items['taxonomy/term/%taxonomy_term/edit']['access callback'] = '_ace_extras_term_access';
}

/**
 * Helper function - Additional access check for editing taxonomy terms.
 *
 * @param $term
 * @return bool
 */
function _ace_extras_term_access($term) {
  global $user;
  // first, do regular user_access check
  $original_access_check = taxonomy_term_edit_access($term);
  if (!$original_access_check) {
    return FALSE;
  }
  // Now check if user is a membership holder of a Commerce membership account?
  $secondary_ids = db_select('membership_entity_secondary_member', 'mesm')
    ->fields('mesm', array('mid'))
    ->condition('mesm.uid', $user->uid, '=')
    ->execute()
    ->fetchAllKeyed();
  if (count($secondary_ids) == 0) { // Not a secondary member
    return TRUE;
  }
  else {
    $primary_ids = db_select('membership_entity', 'me')
      ->fields('me', array('mid'))
      ->condition('me.uid', $user->uid, '=')
      ->countQuery()
      ->execute()
      ->fetchField();
    if ($primary_ids == 0) { // Not a primary account holder
      return FALSE;
    }
    else {
      return TRUE;
    }
  }
}
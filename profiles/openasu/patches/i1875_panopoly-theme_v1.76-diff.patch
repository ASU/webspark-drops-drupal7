--- /home/bryan/drupal.org_projects/panopoly/modules/panopoly/panopoly_theme/plugins/styles/accordion/panopoly_accordion.inc	2020-08-26 01:12:41.223140223 -0700
+++ panopoly_theme/plugins/styles/accordion/panopoly_accordion.inc	2020-10-09 12:48:14.396038710 -0700
@@ -20,27 +20,20 @@
  * @ingroup themeable
  */
 function theme_panopoly_theme_panopoly_accordion_style_render_region($vars) {
-
   // Include Some Basic Information
   $display = $vars['display'];
-  $region_id = $vars['region_id'];
   $panes = $vars['panes'];
   $settings = $vars['settings'];
 
-  if (empty($display->css_id) ) {
-    $region_id = 'accordion-panels-' . $region_id;
-  } 
-  else {
-    $region_id = 'accordion-' . $display->css_id;
-  }
+  $accordion_id = 'accordion-panels-' . $vars['region_id'];
 
   // Display the Output
-  $output = '<div class="drulog-panels-accordion" id="' . $region_id . '">';
+  $output = '<div class="drulog-panels-accordion" id="' . $accordion_id . '">';
   foreach ($panes as $pane_id => $pane) {
     if ($pane_id != 'empty_placeholder') {
       $output .= !empty($display->content[$pane_id]->title) ? '<h4 class="accordion-title">' . $display->content[$pane_id]->title . '</h4>' : '<h4 class="accordion-title">' . '&nbsp;' . '</h4>';
-      $output .= '<div class="accordion-content ' . $region_id . '-' . $pane_id . '">' . $pane . '</div>';
-    } 
+      $output .= '<div class="accordion-content ' . $accordion_id . '-' . $pane_id . '">' . $pane . '</div>';
+    }
   }
   $output .= '</div>' ;
 
@@ -51,29 +44,29 @@
 
   // Inject the Javascript
   $settings_js = array(
-    'accordion' => array($region_id  => array('options' => array('header' => 'h4.accordion-title')))
+    'accordion' => array($accordion_id  => array('options' => array('header' => 'h4.accordion-title')))
   );
-  $settings_js['accordion'][$region_id]['options'] += $settings;
-  if (isset($settings_js['accordion'][$region_id]['options']['active'])) {
-    if ($settings_js['accordion'][$region_id]['options']['active'] == -1) {
-      $settings_js['accordion'][$region_id]['options']['active'] = FALSE;
+  $settings_js['accordion'][$accordion_id]['options'] += $settings;
+  if (isset($settings_js['accordion'][$accordion_id]['options']['active'])) {
+    if ($settings_js['accordion'][$accordion_id]['options']['active'] == -1) {
+      $settings_js['accordion'][$accordion_id]['options']['active'] = FALSE;
     }
     else {
-      $settings_js['accordion'][$region_id]['options']['active'] = (int)$settings_js['accordion'][$region_id]['options']['active'];
+      $settings_js['accordion'][$accordion_id]['options']['active'] = (int)$settings_js['accordion'][$accordion_id]['options']['active'];
     }
   }
-  if (empty($settings_js['accordion'][$region_id]['options']['heightStyle'])) {
-    if (!empty($settings_js['accordion'][$region_id]['options']['fillSpace'])) {
-      $settings_js['accordion'][$region_id]['options']['heightStyle'] = 'fill';
+  if (empty($settings_js['accordion'][$accordion_id]['options']['heightStyle'])) {
+    if (!empty($settings_js['accordion'][$accordion_id]['options']['fillSpace'])) {
+      $settings_js['accordion'][$accordion_id]['options']['heightStyle'] = 'fill';
     }
-    else if (!empty($settings_js['accordion'][$region_id]['options']['clearStyle'])) {
-      $settings_js['accordion'][$region_id]['options']['heightStyle'] = 'content';
+    else if (!empty($settings_js['accordion'][$accordion_id]['options']['clearStyle'])) {
+      $settings_js['accordion'][$accordion_id]['options']['heightStyle'] = 'content';
     }
     else {
-      $settings_js['accordion'][$region_id]['options']['heightStyle'] = 'auto';
+      $settings_js['accordion'][$accordion_id]['options']['heightStyle'] = 'auto';
     }
   }
-  unset($settings_js['accordion'][$region_id]['options']['fillSpace'], $settings_js['accordion'][$region_id]['options']['clearStyle'], $settings_js['accordion'][$region_id]['options']['autoHeight']);
+  unset($settings_js['accordion'][$accordion_id]['options']['fillSpace'], $settings_js['accordion'][$accordion_id]['options']['clearStyle'], $settings_js['accordion'][$accordion_id]['options']['autoHeight']);
   drupal_add_js($settings_js, 'setting');
   return $output;
 }
@@ -82,7 +75,7 @@
   $form['active'] = array(
     '#type' => 'textfield',
     '#title' => t('Set active'),
-    '#description' => t('Set to -1 if you want no pane active'),  
+    '#description' => t('Set to -1 if you want no pane active'),
     '#default_value' => (isset($style_settings['active'])) ? $style_settings['active'] : 0,
   );
   $height_options = array(
@@ -90,10 +83,10 @@
     'fill' => t('Expand to the available height based on the accordion\'s parent height.'),
     'content' => t('Each panel will be only as tall as its content.'),
   );
-  if ($style_settings['fillSpace']) {
+  if (isset($style_settings['fillSpace']) && $style_settings['fillSpace'] === TRUE) {
     $height_default = 'fill';
   }
-  else if ($style_settings['clearStyle']) {
+  elseif (isset($style_settings['clearStyle']) && $style_settings['clearStyle'] === TRUE) {
     $height_default = 'content';
   }
   else {
@@ -108,19 +101,19 @@
   $form['collapsible'] = array(
     '#type' => 'checkbox',
     '#description' => t("Whether all the sections can be closed at once. Allows collapsing the active section by the triggering event (click is the default)."),
-    '#title' => t('Can close all section'),  
-    '#return_value' => 1,  
+    '#title' => t('Can close all section'),
+    '#return_value' => 1,
     '#default_value' => (isset($style_settings['collapsible'])) ? $style_settings['collapsible'] : 0,
   );
   $form['event'] = array(
     '#type' => 'select',
-    '#title' => t('The event on which to trigger the accordion.'),  
+    '#title' => t('The event on which to trigger the accordion.'),
     '#options' => array('click' => t('On click'), 'mouseover' => t('On mouse over')),
     '#default_value' => (isset($style_settings['event'])) ? $style_settings['event'] : 'click',
   );
   $form['navigation'] = array(
     '#type' => 'checkbox',
-    '#title' => t('If set, looks for the anchor that matches location.href and activates it. Great for href-based state-saving. Use navigationFilter to implement your own matcher..'),  
+    '#title' => t('If set, looks for the anchor that matches location.href and activates it. Great for href-based state-saving. Use navigationFilter to implement your own matcher..'),
     '#return_value' => TRUE,
     '#default_value' => (isset($style_settings['navigation'])) ? $style_settings['navigation'] : FALSE,
   );

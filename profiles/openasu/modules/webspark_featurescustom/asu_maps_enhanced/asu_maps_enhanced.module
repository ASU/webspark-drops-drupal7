<?php

include_once 'asu_maps_enhanced.helpers.inc';

/**
 * @file
 * ASU Maps Enhanced Module
 *
 * This module allows the configuration of customizable Concept3d map panels
 *
 * @author Colton Testamarck (colt@asu.edu)
 */
define('ASU_MAPS_ENHANCED_DEFAULT_HEIGHT', 650);
define('ASU_MAPS_ENHANCED_TREE_CACHE_DURATION', 12); //12 HOURS

define('ASU_MAPS_ENHANCED_GIS_HOST', variable_get('asu_maps_enhanced_gis_host', 'gis.m.asu.edu'));
define('ASU_MAPS_ENHANCED_GIS_LAYERS_PATH', variable_get('asu_maps_enhanced_gis_layers_path', '/portal/sharing/rest/content/items/943061eccb574dbda06af71ab93694cc/data'));
define('ASU_MAPS_ENHANCED_MAP_URL', variable_get('asu_maps_enhanced_map_url', 'https://gis.m.asu.edu/asucampus/'));
define('ASU_MAPS_ENHANCED_IFRAME_DEFAULT_HEIGHT', variable_get('asu_maps_enhanced_iframe_default_height', 642));

/**
 * Implementation of hook_entity_info_alter()
 */
function asu_maps_enhanced_entity_info_alter(&$entity_info) {

  // ASU Maps Enhanced Entity Info
  $entity_info['fieldable_panels_pane']['bundles']['asu_maps_enhanced'] = [
    'label' => t('Add ASU enhanced map'),
    'description' => t('Add Google-based map with ASU-enhanced features, including ASU landmarks and locations.'),
    'pane category' => t('Custom'),
    'pane top level' => true,
    'pane icon' => drupal_get_path('module', 'asu_maps_enhanced') . '/images/icon_map_ASU.png',
    'admin' => [
      'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
      'bundle argument' => 4,
      'real path' => 'admin/structure/fieldable-panels-panes/manage/asu_maps_enhanced',
      'access arguments' => ['administer fieldable panels panes'],
    ],
  ];
}

/**
 * Implements hook_field_info()
 *
 * @return array
 */

function asu_maps_enhanced_field_info() {
  return [
    'asu_maps_enhanced' => [
      'label' => t('ASU Enhanced Maps'),
      'description' => t('A field to store ASU Map Items'),
      'default_widget' => 'asu_maps_enhanced_form',
      'default_formatter' => 'asu_maps_enhanced',
      'settings' => [
        //'uri_scheme' => variable_get('file_default_scheme', 'public'),
        //'default_image' => 1,
      ],
      'instance_settings' => [],
    ],
  ];
}

/*
*Function to check if asu_maps_enhanced field is empty
*
*/
function asu_maps_enhanced_field_is_empty($item, $field) {
  if (empty($item['map_items'])) {
    return true;
  }
  return false;
}

/**
 * Implementation of hook_field_formatter_info().
 *
 */
function asu_maps_enhanced_field_formatter_info() {
  return [
    'asu_maps_enhanced' => [
      'label' => t('ASU Enhanced Maps'),
      'field types' => ['asu_maps_enhanced'],
      'settings' => [],
    ],
  ];
}

/**
 * Implements hook_theme().
 */
function asu_maps_enhanced_theme($existing, $type, $theme, $path) {
  return [
    'asu_maps_enhanced_view' => [
      'variables' => [
        'items' => null,
        'delta' => null,
        'settings' => null,
      ],
    ],
  ];
}

/**
 * Implements hook_field_formatter_view().
 */
function asu_maps_enhanced_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $map_items = [];
  $element = [];
  //default map settings
  $default_settings = asu_maps_enhanced_get_default_settings();
  $height = ASU_MAPS_ENHANCED_IFRAME_DEFAULT_HEIGHT;
  $element[0]['#markup'] = '';

  //todo:  cleanup messy logic
  if (isset($entity->bundle) && ($entity->bundle == 'asu_maps_enhanced') && isset($entity->field_map_info['und'][0]['value']) && isset($entity->field_map_action_link['und'][0])) {
    $map_info = $entity->field_map_info['und'][0]['value'];
    $field_map_alink = $entity->field_map_action_link['und'][0]['url'];
    $field_map_atitle = $entity->field_map_action_link['und'][0]['title'];
    $element[0]['#markup'] = "<div class = 'row'><div class ='col-md-8'>$map_info</div><div class ='col-md-4'><a
      id='map_button' class ='btn btn-primary' href='$field_map_alink'>$field_map_atitle</a></div></div>";
  } else {
    if (isset($entity->bundle) && ($entity->bundle == 'asu_maps_enhanced') && isset($entity->field_map_info['und'][0]['value'])) {
      $map_info = $entity->field_map_info['und'][0]['value'];
      $element[0]['#markup'] = "<div class='row'><div class ='col-md-12'>$map_info</div></div>";
    } else {
      if (isset($entity->bundle) && ($entity->bundle == 'asu_maps_enhanced') && isset($entity->field_map_action_link['und'][0])) {
        $field_map_alink = $entity->field_map_action_link['und'][0]['url'];
        $field_map_atitle = $entity->field_map_action_link['und'][0]['title'];
        $element[0]['#markup'] = "<div class = 'row'><div class ='col-md-12'><a
      id='map_button' class ='btn btn-primary' href='$field_map_alink'>$field_map_atitle</a></div></div>";
      }
    }
  }

  $map_items = drupal_json_decode($items[0]['map_items']);

  // If the location is JSON-encoded, render an embed based on the feature data
  if ($map_items != false) {

    // get the map settings
    if (!empty($map_items) && isset($map_items[0]['name']) && $map_items[0]['name'] == 'maps_enhanced_settings') {
      $map_settings = $map_items[0];
      $map_settings = array_merge($default_settings, $map_settings);

      if (isset($map_settings['map_height'])) {
        $height = $map_settings['map_height'];
      }
    } else {
      $map_settings = $default_settings;
    }

    $settings = $display['settings'];

    if (count($map_items) > 0) {
      foreach ($items as $delta => $item_data) {
        $element[$delta]['#markup'] .= theme('asu_maps_enhanced_view', [
          'items' => $map_items,
          'delta' => $delta,
          'settings' => $settings,
          'height' => $height,
          'map_settings' => $map_settings
        ]);
      }

      if (isset($items[0]['description'])) {
        $element[0]['#markup'] .= '<div>' . $items[0]['description'] . '</div>';
      }
    }

    // If the field is stored as an HTML embed instead of a JSON-encoded object, render the plain markup
  } else {
    $element[0]['#markup'] .= $items[0]['map_items'];
  }

  return $element;
}

/**
 * Theme function for asu_maps view
 **/
function theme_asu_maps_enhanced_view($variables) {
  $height = $variables['height'];
  $output = '';
  $settings = $variables['map_settings'];

  $output .= "<div id='asu_map' style='height: $height\px; width: 100%;'>
      <iframe name='enhanced-map-frame' style='height: 100%;' id='embed-iframe' class='map dev' src=". ASU_MAPS_ENHANCED_MAP_URL . '?';

  $locations = [];
  $categories = [];
  $loc_string = '';
  $cat_string = '';

  $map_items = $variables['items'];

  // display embed with GIS feature parameters
  if (is_array($map_items) && array_key_exists('parent', $map_items[0])) {
    $item = $map_items[0];

    $loc_string = 'objid=' . $item['id'] . '&lyrid=' . $item['parent'];

  // handle old campusbird params
  } else {
    foreach ($map_items as $location) {
      if (isset($location['id'])) {
        $locations[] = $location['id'];
      } else {
        if (isset($location['catId'])) {
          $categories[] = $location['catId'];
        }
      }
    }

    if (!empty($locations)) {
      $loc_string = 'm=' . $locations[0];
    } else {
      $loc_string = 'ct=' . implode(',', $categories);
    }
  }

  $output .= $loc_string . $cat_string;
  $output .= " frameborder='0' width='100%'></iframe></div>";

  return $output;
}




//Originallly copied in and refactored from ASU Spotlight
/**
 * Implements hook_field_widget_info().
 **/
function asu_maps_enhanced_field_widget_info() {
  return [
    'asu_maps_enhanced_form' => [
      'label' => t('ASU Enhanced Maps'),
      'field types' => ['asu_maps_enhanced'],
      'behaviors' => [
        'multiple values' => FIELD_BEHAVIOR_DEFAULT,
        'default value' => FIELD_BEHAVIOR_DEFAULT,
      ],
    ],
  ];
}

/**
 * Implements hook_field_settings_form()
 */
function asu_maps_enhanced_field_settings_form($field, $instance, $has_data) {
  $form = [];

  return $form;
}

/**
 * Implements hook_field_instance_settings_form()
 */
function asu_maps_enhanced_field_instance_settings_form($field, $instance) {
  $form = [];
  //$form = image_field_instance_settings_form($field, $instance);
  return $form;
}

/**
 * Implements hook_field_formatter_settings_form().
 *
 */
function asu_maps_enhanced_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $element = [];

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 *
 */
function asu_maps_enhanced_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $summary = [];

  return $summary;
}


/**
 * Implements hook_field_widget_form().
 */
function asu_maps_enhanced_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  if ($instance['widget']['type'] == 'asu_maps_enhanced_form') {

  //turn off the panopoly magic preview, since it interferes with the form state
    variable_set('panopoly_magic_live_preview', 0);
    $default_configs = asu_maps_enhanced_get_default_settings();

    if (isset($items[0]['map_items'])) {
      $map_items = $items[0]['map_items'];
    } else {
      $map_items = '[]';
    }


    // Add the campus bird location tree as a setting to the map form js
    $tree = asu_maps_enhanced_get_layers();

    // pass the decoded map items to the JS to make handling the object a little nicer on the frontend
    $decoded_items = drupal_json_decode($map_items);

    $settings = [
      'tree' => $tree,
      'form_field_id' => 'asu-maps-enhanced-tree',
      'map_items' => $decoded_items
    ];

    // field to store the configuration, we set the style="display:none", rather than
    // a hidden field type.  this is so that the js can modify the values
    $element['map_items'] = [
      '#title' => t('Select Map Feature to Display'),
      '#type' => 'textarea',
      '#prefix' => '<div class="panel panel-info maps-enhanced-form-text">
                        <div id="asu-maps-enhanced-tree">
                        </div>
                    </div><div id="asu_map_enhanced" style="display:none;">',
      '#suffix' => '</div>',
      '#description' => 'Select a map layer in the tree to the left, then select a feature from the dropdown on the right.',
      '#default_value' => $map_items,
    ];

    /*
    $element['description'] = array(
      '#title' => t('Description'),
      '#type' => 'textfield',
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#description' => 'This field is deprecated in favor of the Map Info field, and will be removed in a future version.',
      '#rows' => 2,
      '#default_value' => isset($items[0]['description']) ? $items[0]['description'] : NULL,
    );*/

    $element['#attached']['css'][] = drupal_get_path('module', 'asu_maps_enhanced') . '/vendor/asu-maps/asu-maps.production.css';
    $element['#attached']['css'][] = drupal_get_path('module', 'asu_maps_enhanced') . '/css/asu_maps_enhanced_form.css';

    drupal_add_js(['asu_maps_enhanced_form' => $settings], 'setting');
    drupal_add_js(drupal_get_path('module', 'asu_maps_enhanced') . '/vendor/react/react.production.min.js');
    drupal_add_js(drupal_get_path('module', 'asu_maps_enhanced') . '/vendor/react/react-dom.production.min.js');
    drupal_add_js(drupal_get_path('module', 'asu_maps_enhanced') . '/vendor/asu-maps/asu-maps.production.js');
    drupal_add_js(drupal_get_path('module', 'asu_maps_enhanced') . '/js/asu_maps_enhanced_form.js');
  }

  return $element;
}

/**
 * Implements hook_field_insert().  Turns preview back on upon inserting new field.
 */
function asu_maps_enhanced_field_insert($entity_type, $entity, $field, $instance, $langcode, &$items) {
  variable_set('panopoly_magic_live_preview', 1);
}

/**
 * Implements hook_field_update().  Turns preview back on upon updating field.
 */
function asu_maps_enhanced_field_update($entity_type, $entity, $field, $instance, $langcode, &$items) {
  variable_set('panopoly_magic_live_preview', 1);
}

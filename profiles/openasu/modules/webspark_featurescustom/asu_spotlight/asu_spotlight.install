<?php

/**
 * @file
 * An installation file for ASU Spotlight
 */

/**
 * Implementation of hook_install().
 */
function asu_spotlight_install() {

}

/**
*Implemenation of hook_update_N()
*
*This reverts the feature portion to ensure that the optionset field is added
**/
function asu_spotlight_update_7001(&$sandbox) {
  features_revert_module('asu_spotlight');
}


/**
*Implementation of hook_update_N()
*
*This update disables the original Panopoly spotlight
**/
function asu_spotlight_update_7002(&$sandbox) {
  $allowed_panes = variable_get('panels_page_allowed_types', array());
  $allowed_panes['fieldable_panels_pane-spotlight']=0;
  variable_set('panels_page_allowed_types', $allowed_panes);
}

/**
*Implementation of hook_update_N()
*Eliminates the panopoly spotlight from the list of allowed pane types
**/
function asu_spotlight_update_7003(&$sandbox) {

  //Set the weight heavy, because we're removing the generic spotlight widget
  db_update('system')
    ->fields(array('weight' => 100))
    ->condition('name', 'asu_spotlight', '=')
    ->execute();

  $allowed_panes = variable_get('panels_page_allowed_types', array());
  if(isset($allowed_panes['fieldable_panels_pane-spotlight'])) {
    unset($allowed_panes['fieldable_panels_pane-spotlight']);
  }
  variable_set('panels_page_allowed_types', $allowed_panes);
}


/**
 * Implements hook_update_N()
 * Reverts feature to use custom image display type
 *
 * @param $sandbox
 */
function asu_spotlight_update_7004(&$sandbox) {
  features_revert_module('asu_spotlight');
}

function asu_spotlight_update_7007(&$sandbox) {
  $field_type = 'asu_spotlight';
  $fields = field_info_fields();
  foreach ($fields as $field_name => $field) {
    if ($field['type'] == $field_type && $field['storage']['type'] == 'field_sql_storage') {
      $schema = asu_spotlight_field_schema($field);
      foreach ($field['storage']['details']['sql'] as $type => $table_info) {
        foreach ($table_info as $table_name => $columns) {
          foreach ($schema['columns'] as $column => $data) {
            $column_name = _field_sql_storage_columnname($field_name, $column);
            if ($column_name == 'field_asu_spotlight_items_overlaytextwidth' &&
              !db_field_exists($table_name, 'field_asu_spotlight_items_overlaytextwidth')) {
              db_add_field($table_name, $column_name, $schema['columns'][$column]);
            }
          }
        }
      }
    }
  }
  field_cache_clear();
}

/**
 * Implements hook_update_N()
 * + Updates permissions for ASU Spotlight (admin, editor roles)
 **/
function asu_spotlight_update_7008(&$sandbox) {
  features_revert_module('asu_spotlight');
}

/**
 * Implementation of hook_uninstall().
 */
function asu_spotlight_uninstall() {

  // Retrieve the file IDs for default files
  $fids = array(
    'panopoly_widgets_default_spotlight_fid' => variable_get('panopoly_widgets_default_spotlight_fid', NULL),
    'panopoly_widgets_default_image_fid' => variable_get('panopoly_widgets_default_image_fid', NULL),
    'panopoly_widgets_default_video_fid' => variable_get('panopoly_widgets_default_video_fid', NULL)
  );

  foreach($fids as $variable_name => $fid) {

    // Deletes the file
    if (!empty($fid) && $file = file_load($fid)) {
      file_delete($file);
    }

    // Deletes the variable
    variable_del($variable_name);
  }

  variable_del('panopoly_widgets_spotlight_pause_play_buttons');
  variable_del('panopoly_widgets_spotlight_rotation_time');
}

/**
 * Implementation of hook_field_schema().
 */
function asu_spotlight_field_schema($field) {
  if ($field['type'] == 'asu_spotlight') {
    $schema['columns']['title'] = array(
      'type' => 'varchar',
      'length' => '255',
      'not null' => FALSE,
    );

    $schema['columns']['description'] = array(
      'type' => 'text',
      'size' => 'big',
      'not null' => FALSE,
    );

    $schema['columns']['fid'] = array(
      'type' => 'int',
      'not null' => FALSE,
      'unsigned' => TRUE,
    );

    $schema['columns']['link'] = array(
      'type' => 'varchar',
      'length' => '255',
      'not null' => FALSE,
    );

    $schema['columns']['alt'] = array(
      'type' => 'varchar',
      'length' => '255',
      'not null' => FALSE,
    );

    $schema['indexes'] = array(
      'fid' => array('fid'),
    );

    $schema['foreign keys'] = array(
      'fid' => array(
        'table' => 'file_managed',
        'columns' => array('fid' => 'fid'),
      ),
    );

    $schema['columns']['actionlink'] = array(
      'type' => 'varchar',
      'length' => '255',
      'not null' => FALSE,
    );

    $schema['columns']['actiontitle'] = array(
      'type' => 'varchar',
      'length' => '255',
      'not null' => FALSE,
    );

    $schema['columns']['actionlink2'] = array(
      'type' => 'varchar',
      'length' => '255',
      'not null' => FALSE,
    );

    $schema['columns']['actiontitle2'] = array(
      'type' => 'varchar',
      'length' => '255',
      'not null' => FALSE,
    );

    $schema['columns']['position'] = array(
      'type' => 'varchar',
      'length' => '100',
      'not null' => FALSE,
    );

    $schema['columns']['overlaytextwidth'] = array(
      'type' => 'varchar',
      'length' => '100',
      'not null' => FALSE,
      'default' => 'full-width',
      'description' => 'CSS class that defines relative width of text container over the 1170px center of the background image',
    );

    $schema['columns']['color'] = array(
      'type' => 'varchar',
      'length' => '100',
      'not null' => FALSE,
    );

    return $schema;
  }
}

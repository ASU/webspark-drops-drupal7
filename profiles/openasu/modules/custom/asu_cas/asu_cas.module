<?php
/**
 * @file
 * Code for the ASU CAS and More feature.
 */

include_once 'asu_cas.features.inc';

define('ASU_CAS_USERNAME_LABEL', 'ASURITE User ID');

/**
 * Implements hook_boot()
 *
 * Ensures that all pages are forced to HTTPS if Webspark Featurescustom isn't enabled
 */
function asu_cas_boot() {
  if (!module_exists('webspark_featurescustom')) {
    global $install_state;
    if (!$install_state) {
      if (isset($_SERVER['PANTHEON_ENVIRONMENT'])) {
        if (!isset($_SERVER['HTTP_X_SSL']) || $_SERVER['HTTP_X_SSL'] != 'ON') {
          header('HTTP/1.0 301 Moved Permanently');
          header('Location: https://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']);
          exit();
        }
      }
    }
  }
}

/*
 * Implements hook_form_alter()
 *
 * This properly sets the default admin role to 'administrator' and disables
 * all the other roles from being assigned.
 */
function asu_cas_form_alter(&$form, &$form_state, $form_id) {

  if ($form_id == "user_admin_settings") {
    $roles = array_map('check_plain', user_roles(TRUE));
  }

  // This function was added to fix CAS role issue by adding CAS role enabled
  // by default and disable it from being unchecked
  if ($form_id == "cas_admin_settings") {
    $roles = array_map('check_plain', user_roles(TRUE));
    unset($form['account']['cas_auto_assigned_role']);
    $checkbox_authenticated = array(
      '#type' => 'checkbox',
      '#title' => $roles[DRUPAL_AUTHENTICATED_RID],
      '#default_value' => TRUE,
      '#disabled' => TRUE,
    );
    foreach ($roles as $key => $role) {
      // Sets the default administrator role to 'administrator' to ensure CAS
      // role does not become default
      if ($role == "CAS") {
        $name = $role;
        $rid = $key;
      }
    }
    // Preventing CAS role from being taken away from CAS user
    $cas_authenticated = array(
      '#type' => 'checkbox',
      '#title' => $name,
      '#default_value' => TRUE,
      '#disabled' => TRUE,
    );
    unset($roles[DRUPAL_AUTHENTICATED_RID]);
    unset($roles[$rid]);

    // Auto assigns CAS user role to all new CAS users
    $form['account']['cas_auto_assigned_role'] = array(
      '#type' => 'checkboxes',
      '#title' => t('Roles'),
      '#description' => t('The selected roles will be automatically assigned to each CAS user on login. Use this to automatically give CAS users additional privileges or to identify CAS users to other modules.'),
      '#default_value' => variable_get('cas_auto_assigned_role', array()),
      '#options' => $roles,
      '#access' => user_access('administer permissions'),
      DRUPAL_AUTHENTICATED_RID => $checkbox_authenticated,
      $rid => $cas_authenticated,
    );
  }
}

/*
 * Implements hook_FORM_ID_form_alter()
 */
function asu_cas_form_cas_add_user_form_alter(&$form, &$form_state) {
  $form['account']['cas_name']['#title'] = ASU_CAS_USERNAME_LABEL;
  $form['account']['cas_name']['#description'] = t("Registration will proceed as if the user with the specified @label just logged in.", array('@label' => ASU_CAS_USERNAME_LABEL));
}

/*
 * Implements hook_FORM_ID_form_alter()
 */
function asu_cas_form_user_register_form_alter(&$form, &$form_state) {
  if (user_access('administer users')) {
    $form['account']['cas_name']['#title'] = ASU_CAS_USERNAME_LABEL;
    $form['account']['cas_name']['#description'] = 'If necessary, additional ASURITE User IDs can be added after the account is created.';
  }
}

/*
 * Implements hook_FORM_ID_form_alter()
 */
function asu_cas_form_cas_user_add_alter(&$form, &$form_state) {
  $form['cas_name']['#title'] = ASU_CAS_USERNAME_LABEL;
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t("Add an @label", array('@label' => ASU_CAS_USERNAME_LABEL))
  );
}

/*
 * Implements hook_FORM_ID_form_alter()
 */
function asu_cas_form_user_profile_form_alter(&$form, &$form_state) {
  if (user_access('administer users')) {
    $form['account']['cas_name']['#title'] = ASU_CAS_USERNAME_LABEL;
    $form['account']['cas_name']['#description'] = '';
  }
}

/*
 * Implements hook_menu_alter()
 */
function asu_cas_menu_alter(&$items) {
  $items['admin/people/cas/create']['title'] = 'Add ASURITE User';
  $items['user/%user/cas']['access callback'] = FALSE;
}

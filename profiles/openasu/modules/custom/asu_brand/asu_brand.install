<?php

/**
 * Implements hook_install().
 */
function asu_brand_install() {
  variable_set('asu_brand_ci_testing', 0);
  // Set permissions for ASU Brand
  _asu_brand_user_perms('add');
}

/**
 * Implements hook_uninstall().
 */
function asu_brand_uninstall() {
  drupal_load('module', 'asu_brand');

  // Delete all module variables.
  db_delete('variable')->condition('name', 'asu_brand%', 'LIKE')->execute();
  cache_clear_all('variables', 'cache_bootstrap');

  // Delete caches.
  foreach (asu_brand_get_cache_ids() as $cache_id) {
    cache_clear_all($cache_id, 'cache');
  }
  // Remove permissions for ASU Brand
  _asu_brand_user_perms('remove');
}

/**
 * Set footer color variable to '' if it equals '_black' which is the actual
 * value for the black footer.
 */
function asu_brand_update_7100(&$sandbox) {
  $footer_color = variable_get('asu_brand_footer_color', '');
  if ($footer_color = '_black') {
    variable_set('asu_brand_footer_color', '');
    cache_clear_all('asu_brand:footer', 'cache');
  }
}

/**
 * + Updates header variables if Innovation theme is selected
 * + Re-add footer block to all pages
 */
function asu_brand_update_7101(&$sandbox) {
  $theme = 'innovation';
  if (variable_get('theme_default') === $theme) {
    // re-add footer after removal from mega footer module
    $asu_brand_footer_bid = db_query("SELECT bid FROM {block} WHERE delta = :delta AND theme = :theme", array(
      ':delta' => 'asu_brand_footer',
      ':theme' => $theme
    ))->fetchField();
    db_query("UPDATE {block} SET status = :status WHERE bid = :bid AND theme = :theme", array(
      ':status' => 1,
      ':bid' => $asu_brand_footer_bid,
      ':theme' => $theme
    ));
    db_query("UPDATE {block} SET region = :region WHERE bid = :bid AND theme = :theme", array(
      ':region' => 'footer',
      ':bid' => $asu_brand_footer_bid,
      ':theme' => $theme
    ));
    // updates header vars
    variable_set('asu_brand_header_selector', 'default');
    variable_set('asu_brand_header_template', 'default');
    variable_set('asu_brand_header_version', '4.4');
    variable_set('asu_brand_header_basepath', 'http://www.asu.edu/asuthemes');
  }
}
/**
 * + Updates ASU Header to v4.5
 */
function asu_brand_update_7102(&$sandbox) {
  if (variable_get('theme_default') === 'innovation') {
    variable_set('asu_brand_header_version', '4.5');
  }
}

/**
 * + Adds Behat testing variable to turn off GTM during Behat testing
 */
function asu_brand_update_7103(&$sandbox) {
  variable_set('asu_brand_ci_testing', 0);
}

/**
 * + Updates ASU Header to v4.5 for all remaining non-Webspark Innovation users
 */
function asu_brand_update_7104(&$sandbox) {
  variable_set('asu_brand_header_version', '4.5');
}

/**
 * + Updates ASU Header to stable
 */
function asu_brand_update_7105(&$sandbox) {
  variable_set('asu_brand_header_version', 'stable');
}

/**
 * + Set header version to "stable"
 * + Disable display of site name by Drupal, since the brand header is now handling it
 */
function asu_brand_update_7106(&$sandbox) {
  variable_set('asu_brand_header_version', 'stable');
  $themes = list_themes();
  foreach ($themes AS $key => $item) {
    $theme_key = 'theme_'.$key.'_settings';

    $settings = variable_get($theme_key, array());
    $settings['toggle_name'] = FALSE;
    variable_set($theme_key, $settings);
  }
}

/**
 * Delete deprecated/legacy settings for headers/footers (pre WS1.0)
 */
function asu_brand_update_7200(&$sandbox) {
  variable_del('asu_brand_footer_color');
  variable_del('asu_brand_header_template');
  variable_del('asu_brand_header_basepath');

}

/**
 * Adds permissions for ASU Brand configuration form to existing installs
 * @param $sandbox
 */
function asu_brand_update_7201(&$sandbox) {
  _asu_brand_user_perms('add');
}

/**
 * Delete all legacy asu_brand_students_footer blocks, just in case they still exist anywhere.
 * @param $sandbox
 */
function asu_brand_update_7202(&$sandbox) {
  $module = 'asu_brand';
  $delta = 'asu_brand_students_footer';
  $result = db_select('block', 'b')
    ->fields('b', array('bid'))
    ->condition('module', $module)
    ->condition('delta', $delta)
    ->orderBy('bid')
    ->execute();
  $block_ids = $result->fetchCol();

  foreach ($block_ids as $bid) {
    db_delete('block_custom')
      ->condition('bid', $bid)
      ->execute();
    db_delete('block')
      ->condition('module', $module)
      ->condition('delta', $delta)
      ->execute();
    db_delete('block_role')
      ->condition('module', $module)
      ->condition('delta', $delta)
      ->execute();
    db_delete('block_node_type')
      ->condition('module', $module)
      ->condition('delta', $delta)
      ->execute();
  }
}

/**
 * Manages (adds or removes) permissions for ASU Brand
 * @param $action - Add or remove ASU Brand permissions.
 */
function _asu_brand_user_perms($action) {
  $admin_role = user_role_load_by_name('administrator')->rid;
  $perms = array('administer asu brand');
  if (!empty($admin_role) && is_numeric($admin_role)) {
    if ($action === 'add') {
      user_role_grant_permissions($admin_role, $perms); // admin role grant
    } elseif ($action === 'remove') {
      // Delete permission entries from role_permission
      db_delete('role_permission')
        ->condition('permission', 'administer asu brand', 'LIKE')
        ->condition('module', 'asu_brand')
        ->condition('rid', $admin_role, '!=')
        ->execute();
      // admin role remove (to clear static cache entries as well, use the Drupal API)
      user_role_revoke_permissions($admin_role, $perms);
    }
    watchdog('user', __FUNCTION__ . ' - ' . $action . ' ASU Brand permissions');
  }
}
